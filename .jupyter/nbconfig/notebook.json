{
  "keys": {
    "edit": {
      "unbind": [
        "Ctrl-Shift-Minus"
      ]
    },
    "command": {
      "unbind": [
        "I,I",
        "0,0"
      ],
      "bind": {
        "S": "jupyter-notebook:split-cell-at-cursor",
        "I": "jupyter-notebook:interrupt-kernel",
        "R": "jupyter-notebook:confirm-restart-kernel"
      }
    }
  }
  "load_extensions": {
    "nbextensions_configurator/config_menu/main": true,
    "contrib_nbextensions_help_item/main": true,
    "code_prettify/code_prettify": true,
    "vim_binding/vim_binding": false
  },
  "code_prettify": {
    "kernel_config_map_json": "{\n  \"python\": {\n    \"library\": \"import json\\ndef black_reformat(cell_text):\\n    import black\\n    import re\\n    cell_text = re.sub('^%', '#%#', cell_text, flags=re.M)\\n    try:\\n        reformated_text = black.format_str(cell_text, 99, string_normalization=False)\\n    except TypeError:\\n        reformated_text = black.format_str(cell_text, mode=black.FileMode(line_length=99, string_normalization=False))\\n    return re.sub('^#%#', '%', reformated_text, flags=re.M)\",\n    \"prefix\": \"print(json.dumps(black_reformat(u\",\n    \"postfix\": \")))\"\n  },\n  \"r\": {\n    \"library\": \"library(formatR)\\nlibrary(jsonlite)\",\n    \"prefix\": \"cat(toJSON(paste(tidy_source(text=\",\n    \"postfix\": \", output=FALSE)[['text.tidy']], collapse='\\n')))\"\n  },\n  \"javascript\": {\n    \"library\": \"jsbeautify = require('js-beautify')\",\n    \"prefix\": \"console.log(JSON.stringify(jsbeautify.js_beautify(\",\n    \"postfix\": \")));\"\n  }\n}"
  }
}
